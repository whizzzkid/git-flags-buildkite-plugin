#!/bin/bash
set -eo pipefail

echo "--- Running pre-checkout hook"

if [ -n "$BUILDKITE_PLUGIN_GIT_FLAGS_CLEAN_FLAGS" ]; then
  export BUILDKITE_GIT_CLEAN_FLAGS="$BUILDKITE_PLUGIN_GIT_FLAGS_CLEAN_FLAGS"

  echo "Set buildkite git clean flags to $BUILDKITE_PLUGIN_GIT_FLAGS_CLEAN_FLAGS"
fi

if [ -n "$BUILDKITE_PLUGIN_GIT_FLAGS_CLONE_FLAGS" ]; then
  export BUILDKITE_GIT_CLONE_FLAGS="$BUILDKITE_PLUGIN_GIT_FLAGS_CLONE_FLAGS"

  echo "Set buildkite git clone flags to $BUILDKITE_PLUGIN_GIT_FLAGS_CLONE_FLAGS"
fi

if [ -n "$BUILDKITE_PLUGIN_GIT_FLAGS_CLONE_MIRROR_FLAGS" ]; then
  export BUILDKITE_GIT_CLONE_MIRROR_FLAGS="$BUILDKITE_PLUGIN_GIT_FLAGS_CLONE_MIRROR_FLAGS"

  echo "Set buildkite git clone mirror flags to $BUILDKITE_PLUGIN_GIT_FLAGS_CLONE_MIRROR_FLAGS"
fi

if [ -n "$BUILDKITE_PLUGIN_GIT_FLAGS_FETCH_FLAGS" ]; then
  export BUILDKITE_GIT_FETCH_FLAGS="$BUILDKITE_PLUGIN_GIT_FLAGS_FETCH_FLAGS"

  echo "Set buildkite git fetch flags to $BUILDKITE_PLUGIN_GIT_FLAGS_FETCH_FLAGS"
fi

if [ -n "$BUILDKITE_PLUGIN_GIT_FLAGS_MIRRORS_LOCK_TIMEOUT" ]; then
  export BUILDKITE_GIT_MIRRORS_LOCK_TIMEOUT="$BUILDKITE_PLUGIN_GIT_FLAGS_MIRRORS_LOCK_TIMEOUT"

  echo "Set buildkite git mirrors lock timeout to $BUILDKITE_PLUGIN_GIT_FLAGS_MIRRORS_LOCK_TIMEOUT"
fi

if [ -n "$BUILDKITE_PLUGIN_GIT_FLAGS_MIRRORS_PATH" ]; then
  export BUILDKITE_GIT_MIRRORS_PATH="$BUILDKITE_PLUGIN_GIT_FLAGS_MIRRORS_PATH"

  echo "Set buildkite git mirrors path to $BUILDKITE_PLUGIN_GIT_FLAGS_MIRRORS_PATH"
fi

if [ -n "$BUILDKITE_PLUGIN_GIT_FLAGS_MIRRORS_SKIP_UPDATE" ]; then
  export BUILDKITE_GIT_MIRRORS_SKIP_UPDATE="$BUILDKITE_PLUGIN_GIT_FLAGS_MIRRORS_SKIP_UPDATE"

  echo "Set buildkite git mirrors skip update to $BUILDKITE_PLUGIN_GIT_FLAGS_MIRRORS_SKIP_UPDATE"
fi
